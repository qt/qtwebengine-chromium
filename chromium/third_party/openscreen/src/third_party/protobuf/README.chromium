Name: Protocol Buffers
Short Name: protobuf
URL: https://github.com/google/protobuf
License: BSD
License File: LICENSE
Security Critical: yes
Shipped: yes
Version: 3.20.3

Description:

Protocol buffers are Google's language-neutral, platform-neutral, extensible
mechanism for serializing structured data. Open Screen uses protobufs primary
for message serialization.

Steps used to create the current version:
1. Pull the release from https://github.com/google/protobuf/releases (Source
   code zip)
2. Add build files (BUILD.gn, proto_library.gni).

   As needed, update defines required by protobuf on various platforms, warnings
   generated by compilers, and new dependencies introduced.
3. Add gen_openscreen_file_lists.py.
4. Apply patches in patches/ (see the description below):

   $ for patch in patches/*; do patch -s -p1 < $patch; done

   For future releases, it will be worth looking into which patches still need
   to be applied. In case of conflict, update those patches accordingly and save
   them back in place (i.e. in patches directory).
5. Generate proto_sources.gni using the script "gen_openscreen_file_lists.py".
6. Update this file (README.chromium).

Description of the patches:

- 0008-uninline_get_empty_string.patch
- 0010-uninline-generated-code.patch

  These patches uninline some functions, resulting in a significant reduction
  (somewhere between 500 KB and 1 MB) of binary size.

- 0022-Allow-deprecated-fields.patch

  Allows deprecated fields to be used without extra C++ compiler warnings.

- 0027-no-noreturn.patch

  Removes an instance of [[noreturn]]. The attribute is correct, but the way
  protobuf's GOOGLE_LOG(FATAL) is defined, the compiler can't see this and it
  trips -Winvalid-noreturn. See https://github.com/protocolbuffers/protobuf/issues/9817

- 0028-export-internal-metadata.patch

  Adds a missing PROTOBUF_EXPORT. See cl/443188236

- 0030-workaround-window-constinit.patch

  Disables PROTOBUF_CONSTINIT in generated code in Windows shared library
  builds. Protobuf's default instances take pointers to a dllimport variable,
  fixed_address_empty_string. This is not constinit on Windows. This is a bug in
  protobuf as the default instance was intended to be constant-initialized. But
  the components build in Chromium is a developer configuration, so we tolerate
  an initializer as long as the build works, until protobuf has a proper fix.

  See https://github.com/protocolbuffers/protobuf/issues/10159.

- 0031-workaround-cfi-unrelated-cast.patch

  A workaround for Clang's Control Flow Integrity check for casting pointers to
  memory that his not yet initialized to be of that type for empty arrays, does
  not work, and still fails. This patch removes the workaround and instead
  disables cfi-unrelated-cast for the affected methods and simplifies them.

  See https://github.com/protocolbuffers/protobuf/issues/10186.
  See https://bugs.chromium.org/p/chromium/issues/detail?id=1294200#c26.

- 0032-cxx20.patch

  Fixes necessary to build in --std=c++20 mode.

  Imports https://critique.corp.google.com/cl/451177197 (a portion of
  https://github.com/protocolbuffers/protobuf/commit/6dd8af4ecfa7987bddb309862932886b84f1e4ef
  ).

- 0033-no-enum-conversion-warn.patch

  Avoid hitting the clang error -Wenum-constexpr-conversion by specifying width
  of the enum.

  Imports https://critique.corp.google.com/cl/466986872.

- 0034-change-macro-to-avoid-pedantic-warning.patch

  Avoid hitting -Wextra-semi.

  Imports (rebased):
  https://github.com/protocolbuffers/protobuf/commit/def602dd07b7eae1cac6823705975317b5607fc3
