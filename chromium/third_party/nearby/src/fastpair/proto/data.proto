// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package nearby.fastpair.proto;

option java_multiple_files = true;

// Information about Fast Pair. This will either contain a Fast Pair device
// or an opt in status.
message FastPairInfo {
  oneof info {
    OptInStatus opt_in_status = 1;
    FastPairDevice device = 2;
  }
}

// A device that has been Fast Paired with.
message FastPairDevice {
  // The account key which was written to the device after pairing completed.
  optional bytes account_key = 1;

  // The stored discovery item which represents the notification that should be
  // associated with the device. Note, this is stored as a raw byte array
  // instead of StoredDiscoveryItem because icing only supports proto lite and
  // StoredDiscoveryItem is handed around as a nano proto in implementation,
  // which are not compatible with each other.
  optional bytes discovery_item_bytes = 3;

  // SHA256 of "account key + headset's public address", this is used to
  // identify the paired headset. Because of adding account key to generate the
  // hash value, it makes the information anonymous, even for the same headset,
  // different accounts have different values.
  optional bytes sha256_account_key_public_address = 4;

  // Deprecated fields.
  reserved 2;
}

// The status of the user's consent opt-in.
enum OptInStatus {
  STATUS_UNKNOWN = 0;
  STATUS_OPTED_IN = 1;
  STATUS_OPTED_OUT = 2;
  STATUS_ERROR_RETRIEVING_FROM_FOOTPRINTS_SERVER = 3;
}
