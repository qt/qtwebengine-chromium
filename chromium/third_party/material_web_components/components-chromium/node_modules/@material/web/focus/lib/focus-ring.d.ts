/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { LitElement, PropertyValues } from 'lit';
/**
 * A focus ring component.
 */
export declare class FocusRing extends LitElement {
    /**
     * Makes the focus ring visible.
     */
    visible: boolean;
    /**
     * Reflects the value of the `for` attribute, which is the ID of the focus
     * ring's associated control element.
     *
     * Use this when the focus ring's associated element is not a parent element.
     *
     * To manually control a focus ring, set its `for` attribute to `""`.
     *
     * @example
     * ```html
     * <div class="container">
     *   <md-focus-ring for="interactive"></md-focus-ring>
     *   <button id="interactive">Action</button>
     * </div>
     * ```
     *
     * @example
     * ```html
     * <button class="manually-controlled">
     *   <md-focus-ring visible for=""></md-focus-ring>
     * </button>
     * ```
     */
    htmlFor: string | null;
    /**
     * The element that controls the visibility of the focus ring. It is one of:
     *
     * - The element referenced by the `for` attribute.
     * - The element provided to `.attach(element)`
     * - The parent element.
     * - `null` if the focus ring is not controlled.
     */
    get control(): HTMLElement;
    private currentControl;
    /**
     * Attaches the focus ring to an interactive element.
     *
     * @param control The element that controls the focus ring.
     */
    attach(control: HTMLElement): void;
    /**
     * Detaches the focus ring from its current interactive element.
     */
    detach(): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected updated(changedProperties: PropertyValues<FocusRing>): void;
    /**
     * @private
     */
    handleEvent(event: FocusRingEvent): void;
    private setCurrentControl;
}
declare const HANDLED_BY_FOCUS_RING: unique symbol;
interface FocusRingEvent extends Event {
    [HANDLED_BY_FOCUS_RING]: true;
}
export {};
