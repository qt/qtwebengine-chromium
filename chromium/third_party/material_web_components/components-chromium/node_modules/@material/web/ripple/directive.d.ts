/**
 * @license
 * Copyright 2022 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { Directive, DirectiveParameters, ElementPart, PartInfo } from 'lit/directive.js';
import { Ripple } from './lib/ripple.js';
/**
 * Normalized ripple accessor type.
 *
 * Use with `await rippleFunction()`
 */
type RippleFunction = () => Ripple | null | Promise<Ripple | null>;
declare class RippleDirective extends Directive {
    private rippleGetter;
    private element?;
    constructor(partInfo: PartInfo);
    render(ripple: RippleFunction | Promise<Ripple | null>): symbol;
    handleEvent(event: Event): Promise<void>;
    update(part: ElementPart, [ripple]: DirectiveParameters<this>): symbol;
}
/**
 * Connects a Ripple element to a node that drives the interaction
 *
 * @param rippleGetter A function that returns an `md-ripple` element
 * @param simulateKeyboardClick For elements that do not issue a click on
 *     keyboard interaction, pass `true` to enable press animations on Enter or
 *     Spacebar
 */
export declare const ripple: (ripple: Promise<Ripple> | RippleFunction) => import("lit-html/directive.js").DirectiveResult<typeof RippleDirective>;
export {};
