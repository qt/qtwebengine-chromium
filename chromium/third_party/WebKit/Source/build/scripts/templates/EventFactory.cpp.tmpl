{% from "macros.tmpl" import wrap_with_condition, license -%}
{{ license() }}

#include "config.h"
#include "core/events/{{namespace}}Factory.h"

#include "{{namespace}}Headers.h"
#include "RuntimeEnabledFeatures.h"

namespace WebCore {

PassRefPtr<{{namespace}}> {{namespace}}Factory::create(const String& type)
{
{%- for event in events %}
{%- call wrap_with_condition(event.Conditional) %}
    if (type == "{{event|script_name}}"{% if event.RuntimeEnabled %} && RuntimeEnabledFeatures::{{event.RuntimeEnabled|lower_first}}(){% endif %})
        return {{event|cpp_name}}::create();
{%- endcall %}
{%- endfor %}
    return 0;
}

} // namespace WebCore
