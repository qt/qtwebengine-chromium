#
# This file describes all Blink IDL extended attributes and allowed values.
# If any IDL file uses an extended attribute or values not listed below, the
# build will fail.
# If you would like to add a new extended attribute or value, please:
#     (1) add the extended attribute or value to this file
#     (2) add an explanation to the Blink IDL extended attributes document:
#         http://www.chromium.org/blink/webidl/blink-idl-extended-attributes
#     (3) add appropriate test cases to run-bindings-tests
#
# The syntax of this file is as follows:
#     - One extended attribute per one line: Name and (optionally) Values.
#     - "Attr" means that the Attr does not take a value, i.e. [Attr].
#     - "Attr=X" means that Attr takes a required value, which must be X;
#       i.e. [Attr=X].
#     - "Attr=X|Y|Z" means that Attr takes a required value, and the valid
#       values are X, Y, and Z, and combinations thereof;
#       e.g. [Attr=X], [Attr=Y], [Attr=X|Z].
#       The separator must be | or &, so [Attr=X&Z] is also valid; the
#       separator makes a difference for Conditional, but otherwise is simply
#       a style convention.
#     - "Attr=|X|Y|Z" means that Attr takes an optional value, whose valid
#       values (if present) are X, Y, and Z, and combinations thereof; e.g.
#       [Attr], [Attr=X], [Attr=Y], [Attr=X|Z], [Attr=X|Y|Z], [Attr=X&Z].
#       Note that including an empty value in the list, as in [Attr=X||Y],
#       is NOT valid: the value is optional, but empty values are not allowed.
#     - "Attr=*" means that Attr takes a required value, which can be
#       arbitrary and combinations thereof, e.g. [Attr=IndexedDB],
#       [Attr=DeleteFunction], [Attr=X|Y].
#     - "Attr=|*" means that Attr takes an optional value, which can be
#       arbitrary, e.g. [Attr], [Attr=X].
#

ActiveDOMObject
ActivityLog=Access|Setter|Getter|AccessForIsolatedWorlds|SetterForIsolatedWorlds|GetterForIsolatedWorlds
CachedAttribute=*
KeepAttributeAliveForGC
CallWith=ScriptExecutionContext|ScriptState|ScriptArguments|ActiveWindow|FirstWindow|ThisValue
CheckSecurity
CheckSecurityForNode
Clamp
Conditional=*
Constructor
ConstructorCallWith=ScriptExecutionContext|Document
ConstructorRaisesException
ConstructorTemplate=Event|TypedArray
Custom
CustomConstructor
CustomElementCallbacks=Enable|Disable
CustomEnumerateProperty
CustomGetter
CustomIsReachable
CustomLegacyCall
CustomSetter
CustomToV8
Default=NullString|Undefined
DependentLifetime
DeprecateAs=*
DoNotCheckConstants
DoNotCheckSecurity
DoNotCheckSecurityOnGetter
DoNotCheckSecurityOnSetter
DoNotCheckSignature
DoNotGenerateToV8
DoNotGenerateWrap
# Valid values for EnabledAtRuntime and EnabledPerContext are Runtime Enabled
# Features, listed in Source/core/page/RuntimeEnabledFeatures.in
EnabledAtRuntime=*
EnabledPerContext=*
EnforceRange
GenerateIsReachable=*
GetterRaisesException
GlobalContext=Window|WorkerGlobalScope|SharedWorkerGlobalScope|DedicatedWorkerGlobalScope
Immutable
ImplementedAs=*
InitializedByEventConstructor
# FIXME: We should remove this extended attribute once the needed refactoring is complete.
LegacyImplementedInBaseClass
MasqueradesAsUndefined
MeasureAs=*
NamedConstructor=*
NoInterfaceObject
NotEnumerable
OverrideBuiltins
PerWorldBindings
RaisesException
ReadOnly
Reflect=|*
Replaceable
SetterCallWith=ScriptExecutionContext|ScriptState|ScriptArguments|ActiveWindow|FirstWindow
SetterRaisesException
StrictTypeChecking
TreatNullAs=*
TreatReturnedNullStringAs=Null|Undefined
TreatUndefinedAs=*
URL
Unforgeable
Unserializable
