// Copyright 2022 The Dawn & Tint Authors
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived from
//    this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

////////////////////////////////////////////////////////////////////////////////
// File generated by 'tools/src/cmd/gen' using the template:
//   src/tint/lang/core/address_space_bench.cc.tmpl
//
// To regenerate run: './tools/run gen'
//
//                       Do not modify this file directly
////////////////////////////////////////////////////////////////////////////////

#include "src/tint/lang/core/address_space.h"

#include <array>

#include "benchmark/benchmark.h"

namespace tint::core {
namespace {

void AddressSpaceParser(::benchmark::State& state) {
    const char* kStrings[] = {
        "ccin",
        "3",
        "_Vin",
        "__in",
        "1_in",
        "_qiJ",
        "_lli77",
        "__qHupp",
        "vt",
        "G_bt",
        "__out",
        "__viut",
        "__8WWt",
        "Mxxou",
        "fuXggton",
        "fuXtou",
        "funct3on",
        "function",
        "funEtion",
        "PPncTTion",
        "xxuncddon",
        "pixe44_local",
        "SSVVxel_local",
        "pixRR_local",
        "pixel_local",
        "pixel_lF9a",
        "pixel_loca",
        "pOOxVRl_locH",
        "prvaye",
        "llnrrrv77te",
        "priv4t00",
        "private",
        "rvooe",
        "zzvate",
        "piiippa1",
        "puXXh_constant",
        "pusII9_nn55nstant",
        "YusHH_coaastSSrnt",
        "push_constant",
        "pushonkkHan",
        "jush_consgRt",
        "puh_cobsant",
        "storaje",
        "torage",
        "qrage",
        "storage",
        "stoNNge",
        "torgvv",
        "QQorage",
        "unffor",
        "unifojm",
        "uNNwfor8",
        "uniform",
        "uniorm",
        "urriform",
        "Gniform",
        "workgrFFup",
        "Eokgru",
        "worrgroup",
        "workgroup",
        "wokgrou",
        "woJDkgoup",
        "okroup",
    };
    for (auto _ : state) {
        for (auto* str : kStrings) {
            auto result = ParseAddressSpace(str);
            benchmark::DoNotOptimize(result);
        }
    }
}  // NOLINT(readability/fn_size)

BENCHMARK(AddressSpaceParser);

}  // namespace
}  // namespace tint::core
