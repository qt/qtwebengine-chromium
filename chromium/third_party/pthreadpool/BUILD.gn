# Copyright 2022 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/android/config.gni")

config("pthreadpool_config") {
  include_dirs = [
    "src/include",
    "src/src",
  ]
  defines = [ "PTHREADPOOL_USE_GCD=0" ]
}

source_set("pthreadpool") {
  public = [ "src/include/pthreadpool.h" ]

  sources = [
    "src/src/fastpath.c",
    "src/src/memory.c",
    "src/src/portable-api.c",
    "src/src/threadpool-atomics.h",
    "src/src/threadpool-common.h",
    "src/src/threadpool-object.h",
    "src/src/threadpool-utils.h",
  ]

  if (is_win) {
    sources += [ "src/src/windows.c" ]
  } else {
    sources += [ "src/src/pthreads.c" ]
  }

  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs += [ "//build/config/sanitizers:cfi_icall_disable" ]

  public_configs = [ ":pthreadpool_config" ]

  deps = [ "//third_party/fxdiv" ]
}

# This is a target that cannot depend on //base.
source_set("pthreadpool_standalone") {
  public = [ "src/include/pthreadpool.h" ]

  sources = [
    "src/src/fastpath.c",
    "src/src/memory.c",
    "src/src/portable-api.c",
    "src/src/threadpool-atomics.h",
    "src/src/threadpool-common.h",
    "src/src/threadpool-object.h",
    "src/src/threadpool-utils.h",
  ]

  if (is_win) {
    sources += [ "src/src/windows.c" ]
  } else {
    sources += [ "src/src/pthreads.c" ]
  }

  if (!(is_android && use_order_profiling)) {
    assert_no_deps = [ "//base" ]
  }

  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [ "//build/config/compiler:no_chromium_code" ]
  configs += [ "//build/config/sanitizers:cfi_icall_disable" ]

  public_configs = [ ":pthreadpool_config" ]

  deps = [ "//third_party/fxdiv" ]
}
