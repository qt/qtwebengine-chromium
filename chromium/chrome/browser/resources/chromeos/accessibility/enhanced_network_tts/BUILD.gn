# Copyright 2021 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//build/config/features.gni")
import(
    "//chrome/browser/resources/chromeos/accessibility/tools/run_jsbundler.gni")
import("//chrome/common/features.gni")
import("//chrome/test/base/ash/js2gtest.gni")
import("//tools/typescript/ts_library.gni")

assert(is_chromeos_ash)

enhanced_network_tts_dir =
    "$root_out_dir/resources/chromeos/accessibility/enhanced_network_tts"
tsc_out_dir = "$target_gen_dir/tsc"

# TS files to compile.
ts_modules = [
  "background.ts",
  "enhanced_network_tts.ts",
]

# JS files needed by the TS compiler.
js_deps = []

# Root dir must be parent directory to access common/.
ts_library("ts_build") {
  root_dir = "../"
  out_dir = tsc_out_dir
  definitions = [
    "mojo_bindings_externs.d.ts",
    "../definitions/extensions.d.ts",
    "../definitions/extension_types.d.ts",
    "../definitions/runtime.d.ts",
    "../definitions/tabs.d.ts",
    "../definitions/tts.d.ts",
    "../definitions/tts_engine.d.ts",
    "//tools/typescript/definitions/windows.d.ts",
  ]

  in_files = []
  foreach(_js_file, js_deps) {
    in_files += [ "enhanced_network_tts/" + _js_file ]
  }
  foreach(_ts_file, ts_modules) {
    in_files += [ "enhanced_network_tts/" + _ts_file ]
  }

  tsconfig_base = "../tsconfig.base.json"
}

group("build") {
  deps = [ ":copied_files" ]
}

# Instead of setting up one copy target for each subdirectory, use a script
# to copy all files.
run_jsbundler("copied_files") {
  mode = "copy"
  deps = [
    ":ts_build",
    "../common:copied_files",
  ]
  dest_dir = enhanced_network_tts_dir
  sources = [ "background.html" ]
  sources += filter_include(get_target_outputs(":ts_build"), [ "*.js" ])

  rewrite_rules = [
    rebase_path("$tsc_out_dir/enhanced_network_tts", root_build_dir) + ":",
    rebase_path(".", root_build_dir) + ":",
    rebase_path(closure_library_dir, root_build_dir) + ":closure",
  ]
}

source_set("browser_tests") {
  testonly = true
  assert(enable_extensions)

  deps = [ ":enhanced_network_tts_extjs_tests" ]

  data = [
    "$root_out_dir/resources/chromeos/accessibility/enhanced_network_tts/background.html",
    "$root_out_dir/resources/chromeos/accessibility/enhanced_network_tts/background.js",
    "$root_out_dir/resources/chromeos/accessibility/enhanced_network_tts/enhanced_network_tts.js",
    "//chrome/browser/resources/chromeos/accessibility/common/",
    "//chrome/browser/resources/chromeos/accessibility/enhanced_network_tts/",
  ]
  data += js2gtest_js_libraries
}

js2gtest("enhanced_network_tts_extjs_tests") {
  test_type = "extension"
  sources = [
    "enhanced_network_tts_unittest.js",
    "error_handling_unittest.js",
  ]
  gen_include_files = [
    "../common/testing/accessibility_test_base.js",
    "../common/testing/e2e_test_base.js",
    "enhanced_network_tts_e2e_test_base.js",
    "mock_mojo_private.js",
  ]

  # The test base classes generate C++ code with these deps.
  deps = [
    "//ash",
    "//base",
    "//chrome/browser/ash",
    "//chrome/browser/ash/crosapi",
    "//chrome/common",
  ]
  defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]
}
