// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/example/jni_generator/SampleUniqueAnnotations

#ifndef org_chromium_example_jni_generator_SampleUniqueAnnotations_JNI
#define org_chromium_example_jni_generator_SampleUniqueAnnotations_JNI

#include <jni.h>

#include "base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_example_jni_1generator_SampleUniqueAnnotations[];
const char kClassPath_org_chromium_example_jni_1generator_SampleUniqueAnnotations[] =
    "org/chromium/example/jni_generator/SampleUniqueAnnotations";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_example_jni_1generator_SampleUniqueAnnotations_clazz(nullptr);
#ifndef org_chromium_example_jni_1generator_SampleUniqueAnnotations_clazz_defined
#define org_chromium_example_jni_1generator_SampleUniqueAnnotations_clazz_defined
inline jclass org_chromium_example_jni_1generator_SampleUniqueAnnotations_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_example_jni_1generator_SampleUniqueAnnotations,
      &g_org_chromium_example_jni_1generator_SampleUniqueAnnotations_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_natives_GEN_1JNI_org_1chromium_1example_1jni_11generator_1SampleUniqueAnnotations_1foo(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePtr) {
  FooAndroid::BarDelegate* native = reinterpret_cast<FooAndroid::BarDelegate*>(nativePtr);
  CHECK_NATIVE_PTR(env, jcaller, native, "Foo");
  return native->Foo(env);
}

static jint JNI_SampleUniqueAnnotations_Bar(JNIEnv* env, jint x,
    jint y);

JNI_GENERATOR_EXPORT jint
    Java_org_chromium_base_natives_GEN_1JNI_org_1chromium_1example_1jni_11generator_1SampleUniqueAnnotations_1bar(
    JNIEnv* env,
    jclass jcaller,
    jint x,
    jint y) {
  return JNI_SampleUniqueAnnotations_Bar(env, x, y);
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_example_jni_1generator_SampleUniqueAnnotations_nativeCallWithQualifiedObject(
    JNIEnv* env,
    jobject jcaller,
    jlong nativePtr) {
  Foo::Bar* native = reinterpret_cast<Foo::Bar*>(nativePtr);
  CHECK_NATIVE_PTR(env, jcaller, native, "CallWithQualifiedObject");
  return native->CallWithQualifiedObject(env, base::android::JavaParamRef<jobject>(env, jcaller));
}


static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleUniqueAnnotations_useBar1(nullptr);
static void Java_SampleUniqueAnnotations_useBar1(JNIEnv* env, const base::android::JavaRef<jobject>&
    inner) {
  jclass clazz = org_chromium_example_jni_1generator_SampleUniqueAnnotations_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_example_jni_1generator_SampleUniqueAnnotations_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "useBar1",
          "(Lorg/chromium/example/jni_generator/Bar1$Inner;)V",
          &g_org_chromium_example_jni_1generator_SampleUniqueAnnotations_useBar1);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, inner.obj());
}

#endif  // org_chromium_example_jni_generator_SampleUniqueAnnotations_JNI
