// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/example/jni_generator/SampleBidirectionalNonProxy

#ifndef org_chromium_example_jni_generator_SampleBidirectionalNonProxy_JNI
#define org_chromium_example_jni_generator_SampleBidirectionalNonProxy_JNI

#include <jni.h>

#include "base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy[];
const char kClassPath_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy[] =
    "org/chromium/example/jni_generator/SampleBidirectionalNonProxy";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(nullptr);
#ifndef org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz_defined
#define org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz_defined
inline jclass org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy,
      &g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT jint
    Java_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_nativeStaticMethod(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeTest,
    jint arg1) {
  Test* native = reinterpret_cast<Test*>(nativeTest);
  CHECK_NATIVE_PTR(env, jcaller, native, "StaticMethod", 0);
  return native->StaticMethod(env, arg1);
}

JNI_GENERATOR_EXPORT jint
    Java_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_nativeMethod(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeTest,
    jint arg1) {
  Test* native = reinterpret_cast<Test*>(nativeTest);
  CHECK_NATIVE_PTR(env, jcaller, native, "Method", 0);
  return native->Method(env, base::android::JavaParamRef<jobject>(env, jcaller), arg1);
}

static jint JNI_SampleBidirectionalNonProxy_Init(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

JNI_GENERATOR_EXPORT jint
    Java_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_nativeInit(
    JNIEnv* env,
    jobject jcaller) {
  return JNI_SampleBidirectionalNonProxy_Init(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

static jint JNI_SampleBidirectionalNonProxy_Init(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller);

JNI_GENERATOR_EXPORT jint
    Java_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_nativeInit(
    JNIEnv* env,
    jobject jcaller) {
  return JNI_SampleBidirectionalNonProxy_Init(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}


static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testMethodWithParam(nullptr);
static void Java_SampleBidirectionalNonProxy_testMethodWithParam(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper iParam) {
  jclass clazz = org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "testMethodWithParam",
          "(I)V",
          &g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testMethodWithParam);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(iParam));
}

static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testMethodWithParamAndReturn(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_SampleBidirectionalNonProxy_testMethodWithParamAndReturn(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper iParam) {
  jclass clazz = org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "testMethodWithParamAndReturn",
          "(I)Ljava/lang/String;",
&g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testMethodWithParamAndReturn);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id, as_jint(iParam)));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testStaticMethodWithParam(nullptr);
static jint Java_SampleBidirectionalNonProxy_testStaticMethodWithParam(JNIEnv* env, JniIntWrapper
    iParam) {
  jclass clazz = org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "testStaticMethodWithParam",
          "(I)I",
&g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testStaticMethodWithParam);

  jint ret =
      env->CallStaticIntMethod(clazz,
          call_context.base.method_id, as_jint(iParam));
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testMethodWithNoParam(nullptr);
static jdouble Java_SampleBidirectionalNonProxy_testMethodWithNoParam(JNIEnv* env) {
  jclass clazz = org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "testMethodWithNoParam",
          "()D",
          &g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testMethodWithNoParam);

  jdouble ret =
      env->CallStaticDoubleMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testStaticMethodWithNoParam(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_SampleBidirectionalNonProxy_testStaticMethodWithNoParam(JNIEnv* env) {
  jclass clazz = org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "testStaticMethodWithNoParam",
          "()Ljava/lang/String;",
&g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_testStaticMethodWithNoParam);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_addStructB(nullptr);
static void Java_SampleBidirectionalNonProxy_addStructB(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& caller,
    const base::android::JavaRef<jobject>& b) {
  jclass clazz = org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addStructB",
"(Lorg/chromium/example/jni_generator/SampleForTests;Lorg/chromium/example/jni_generator/SampleForTests$InnerStructB;)V",
          &g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_addStructB);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, caller.obj(), b.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_setStringBuilder(nullptr);
static void Java_SampleBidirectionalNonProxy_setStringBuilder(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& sb) {
  jclass clazz = org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setStringBuilder",
          "(Ljava/lang/StringBuilder;)V",
          &g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_setStringBuilder);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, sb.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_setBool(nullptr);
static void Java_SampleBidirectionalNonProxy_setBool(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& b,
    const base::android::JavaRef<jobject>& i) {
  jclass clazz = org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setBool",
          "(Lorg/chromium/example/jni_generator/Boolean;Ljava/lang/Integer;)V",
          &g_org_chromium_example_jni_1generator_SampleBidirectionalNonProxy_setBool);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, b.obj(), i.obj());
}

#endif  // org_chromium_example_jni_generator_SampleBidirectionalNonProxy_JNI
